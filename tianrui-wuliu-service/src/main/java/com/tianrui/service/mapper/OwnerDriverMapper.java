package com.tianrui.service.mapper;

import java.util.List;

import com.tianrui.service.bean.OwnerDriver;
import com.tianrui.service.bean.VehicleAndDriver;

public interface OwnerDriverMapper {
    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table wuliu_owner_driver
     *
     * @mbggenerated
     */
    int deleteByPrimaryKey(String id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table wuliu_owner_driver
     *
     * @mbggenerated
     */
    int insert(OwnerDriver record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table wuliu_owner_driver
     *
     * @mbggenerated
     */
    int insertSelective(OwnerDriver record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table wuliu_owner_driver
     *
     * @mbggenerated
     */
    OwnerDriver selectByPrimaryKey(String id);
    List<OwnerDriver> selectOwnerDriver(OwnerDriver ownerDriver);
    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table wuliu_owner_driver
     *
     * @mbggenerated
     */
    int updateByPrimaryKeySelective(OwnerDriver record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table wuliu_owner_driver
     *
     * @mbggenerated
     */
    int updateByPrimaryKey(OwnerDriver record);
    
    List<OwnerDriver> findByVehOwnerIds(String memberId);
    
    /**
     * 根据条件进行我的未绑定车辆的司机信息查询
     * <p>
     * @param argCondition
     * @return
     * <p>
     * @author guyuke
     * @time 2016年6月13日 上午10:21:00
     */
    List<OwnerDriver> selectMyDriverOutsideByCondition(OwnerDriver argCondition);
    
    /**
     * 根据条件进行我的司机信息查询
     * <p>
     * @param argCondition
     * @return
     * <p>
     * @author guyuke
     * @time 2016年6月01日 上午11:14:00
     */
    List<OwnerDriver> selectMyDriverByCondition(OwnerDriver argCondition);
    
    /**
     * 根据条件进行我的司机信息数据总量查询
     * <p>
     * @param argCondition
     * @return
     * <p>
     * @author guyuke
     * @time 2016年6月01日 上午11:14:00
     */
    long selectCountByCondition(OwnerDriver argCondition);
    
    /**
     * 根据条件进行我的司机车辆联合信息查询
     * <p>
     * @param argCondition
     * @return
     * <p>
     * @author guyuke
     * @time 2016年6月15日 下午12:06:36
     */
    List<VehicleAndDriver> selectDriverAndVehicleByCondition(VehicleAndDriver argCondition);
}